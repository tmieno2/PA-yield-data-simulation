install.packages("parallelly")
install.packages("parallelly", type = "binary")
install.packages("parallelly")
library(parallelly)
install.packages("roxygen2")
install.packages("testthat")
library(pasim)
devtools::document()
usethis::use_package(data.table, sp, sf)
usethis::use_package(c("data.table", "sp", "sf"))
usethis::use_package(sf")
""
usethis::use_package("sf")
usethis::use_package("data.table")
usethis::use_package("data.table")
usethis::use_package("sf")
usethis::use_package("sp")
usethis::use_package("gstat")
usethis::use_package("dplyr")
usethis::use_package("magic")
use_mit_license("Taro Mieno")
usethis::use_mit_license("Taro Mieno")
devtools::document() # regenerate documents reflecting the changes and apply load_all()
devtools::document() # regenerate documents reflecting the changes and apply load_all()
# /*===========================================================
#' # Preparation
# /*===========================================================
# === Packages ===#
library(sp)
library(spdep)
library(spatialreg)
library(sf)
library(raster)
library(data.table)
library(tidyverse)
library(dplyr)
library(magrittr)
library(gstat)
library(GWmodel)
library(scam)
library(parallel)
library(magic)
library(stringr)
library(ggplot2)
library(tictoc)
library(here)
# === Set working directory ===#
setwd(here())
# === load functions ===#
#* source all the functions in the Functions folder
fs::dir_ls(here("R"), full.names = TRUE) %>%
lapply(., function(x) source(x))
# /*===========================================================
#' # Create a field
# /*===========================================================
# ! Define field and plot characteristics here
sim_data <-
gen_fields(
plot_length = 12, # the length of a plot (in number of cells)
plot_width = 3, # the width of a plot (in number of cells)
cell_buffer = 1,
aunit_length = 2, # the length of an analysis unit (in number of cells)
aunit_width = 3, # the width of an analysis unit (in number of cells)
cell = 6, # the length of a cell in meter
#* how wide the field is
# field_col = c(36, 72, 144), # the number of cell columns
field_col = 144, # the number of cell columns
#* how tall the field is
field_row = 72 # the number of row columns
) %>%
#--- add trial design layout ---#
assign_trial_design(., design = c("Latin Square Fixed 5", "Latin Square Fixed 6")) %>%
#--- generate true field parameters ---#
mutate(field_pars = list(
gen_field_parameters(
field_sf,
sp_range = 600,
gstat_model = "Sph",
nsim = 2
)
)) %>%
#--- generate trial design ---#
mutate(trial_design = list(
gen_trial_design(field_sf, field_pars, design_name, num_treatments)
)) %>%
#--- generate regression data ---#
mutate(reg_data = list(
gen_analysis_data(field_pars, field_sf, trial_design)
)) %>%
#--- create the weight matrix if necessary ---#
mutate(weight_matrix = list(
gen_weight_matrix(reg_data, cutoff = 50)
))
sim_data
sim_data$weight_matrix
devtools::document() # regenerate documents reflecting the changes and apply load_all()
devtools::document() # regenerate documents reflecting the changes and apply load_all()
devtools::document() # regenerate documents reflecting the changes and apply load_all()
